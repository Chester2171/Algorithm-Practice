//Given a non-empty array of integers, every element appears twice except for one. Find that single one.
//
//Note:
//
//Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?


public class Solution 
{
    public int SingleNumber(int[] nums) 
    {
        
        bool isDuplicate = true;
        for (int i = 0; i < nums.Length; i++)
        {
            isDuplicate = false;
            for (int j = 0; j < nums.Length; j++)
            {
                if (nums[i] == nums[j] && i != j)
                {
                    isDuplicate = true;
                }
            }
            if (isDuplicate == false)
            {
                return nums[i];
            }
        }
        return 0;
    }
}

//Tim Weigel helped me find the right solution to this algorithm, I also tried to whiteboard this one with him and quickly found that I need to focus on pseudo coding prior to 
//starting to solve the algorithm. It will help me to find the solution without having to go back and make significant changes.
